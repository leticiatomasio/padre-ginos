/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'

// Create Virtual Routes

const PizzasLazyImport = createFileRoute('/pizzas')()
const CartLazyImport = createFileRoute('/cart')()
const OrderPizzaIdLazyImport = createFileRoute('/order/$pizzaId')()

// Create/Update Routes

const PizzasLazyRoute = PizzasLazyImport.update({
  id: '/pizzas',
  path: '/pizzas',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/pizzas.lazy').then((d) => d.Route))

const CartLazyRoute = CartLazyImport.update({
  id: '/cart',
  path: '/cart',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/cart.lazy').then((d) => d.Route))

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const OrderPizzaIdLazyRoute = OrderPizzaIdLazyImport.update({
  id: '/order/$pizzaId',
  path: '/order/$pizzaId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/order/$pizzaId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/cart': {
      id: '/cart'
      path: '/cart'
      fullPath: '/cart'
      preLoaderRoute: typeof CartLazyImport
      parentRoute: typeof rootRoute
    }
    '/pizzas': {
      id: '/pizzas'
      path: '/pizzas'
      fullPath: '/pizzas'
      preLoaderRoute: typeof PizzasLazyImport
      parentRoute: typeof rootRoute
    }
    '/order/$pizzaId': {
      id: '/order/$pizzaId'
      path: '/order/$pizzaId'
      fullPath: '/order/$pizzaId'
      preLoaderRoute: typeof OrderPizzaIdLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/cart': typeof CartLazyRoute
  '/pizzas': typeof PizzasLazyRoute
  '/order/$pizzaId': typeof OrderPizzaIdLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/cart': typeof CartLazyRoute
  '/pizzas': typeof PizzasLazyRoute
  '/order/$pizzaId': typeof OrderPizzaIdLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/cart': typeof CartLazyRoute
  '/pizzas': typeof PizzasLazyRoute
  '/order/$pizzaId': typeof OrderPizzaIdLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/cart' | '/pizzas' | '/order/$pizzaId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/cart' | '/pizzas' | '/order/$pizzaId'
  id: '__root__' | '/' | '/cart' | '/pizzas' | '/order/$pizzaId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CartLazyRoute: typeof CartLazyRoute
  PizzasLazyRoute: typeof PizzasLazyRoute
  OrderPizzaIdLazyRoute: typeof OrderPizzaIdLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CartLazyRoute: CartLazyRoute,
  PizzasLazyRoute: PizzasLazyRoute,
  OrderPizzaIdLazyRoute: OrderPizzaIdLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/cart",
        "/pizzas",
        "/order/$pizzaId"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/cart": {
      "filePath": "cart.lazy.jsx"
    },
    "/pizzas": {
      "filePath": "pizzas.lazy.jsx"
    },
    "/order/$pizzaId": {
      "filePath": "order/$pizzaId.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
